var _user$project$Types$encodeAuth = function (x) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'authEmail',
				_1: _elm_lang$core$Json_Encode$string(x.authEmail)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'authPassword',
					_1: _elm_lang$core$Json_Encode$string(x.authPassword)
				},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Types$postApiUsersLogin = function (body) {
	return _elm_lang$http$Http$request(
		{
			method: 'POST',
			headers: {ctor: '[]'},
			url: A2(
				_elm_lang$core$String$join,
				'/',
				{
					ctor: '::',
					_0: 'http://localhost:8001',
					_1: {
						ctor: '::',
						_0: 'api',
						_1: {
							ctor: '::',
							_0: 'users',
							_1: {
								ctor: '::',
								_0: 'login',
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			body: _elm_lang$http$Http$jsonBody(
				_user$project$Types$encodeAuth(body)),
			expect: _elm_lang$http$Http$expectJson(_elm_lang$core$Json_Decode$int),
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _user$project$Types$encodeCreateArticle = function (x) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'createArticleTitle',
				_1: _elm_lang$core$Json_Encode$string(x.createArticleTitle)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'createArticleBody',
					_1: _elm_lang$core$Json_Encode$string(x.createArticleBody)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'createArticleTags',
						_1: function (_p0) {
							return _elm_lang$core$Json_Encode$list(
								A2(_elm_lang$core$List$map, _elm_lang$core$Json_Encode$string, _p0));
						}(x.createArticleTags)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Types$encodeRegister = function (x) {
	return _elm_lang$core$Json_Encode$object(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'registerEmail',
				_1: _elm_lang$core$Json_Encode$string(x.registerEmail)
			},
			_1: {
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'registerUserName',
					_1: _elm_lang$core$Json_Encode$string(x.registerUserName)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'registerPassword',
						_1: _elm_lang$core$Json_Encode$string(x.registerPassword)
					},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Types$postApiUsersRegister = function (body) {
	return _elm_lang$http$Http$request(
		{
			method: 'POST',
			headers: {ctor: '[]'},
			url: A2(
				_elm_lang$core$String$join,
				'/',
				{
					ctor: '::',
					_0: 'http://localhost:8001',
					_1: {
						ctor: '::',
						_0: 'api',
						_1: {
							ctor: '::',
							_0: 'users',
							_1: {
								ctor: '::',
								_0: 'register',
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			body: _elm_lang$http$Http$jsonBody(
				_user$project$Types$encodeRegister(body)),
			expect: _elm_lang$http$Http$expectJson(_elm_lang$core$Json_Decode$int),
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _user$project$Types$Register = F3(
	function (a, b, c) {
		return {registerEmail: a, registerUserName: b, registerPassword: c};
	});
var _user$project$Types$decodeRegister = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'registerPassword',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'registerUserName',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'registerEmail',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$Register))));
var _user$project$Types$Article = F8(
	function (a, b, c, d, e, f, g, h) {
		return {articleSlug: a, articleTitle: b, articleBody: c, articleAuthor: d, articleTags: e, parsedArticle: f, articleCreatedAt: g, articleUpdatedAt: h};
	});
var _user$project$Types$decodeArticle = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'articleUpdatedAt',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'articleCreatedAt',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'parsedArticle',
			_elm_lang$core$Json_Decode$list(
				A3(
					_elm_lang$core$Json_Decode$map2,
					F2(
						function (v0, v1) {
							return {ctor: '_Tuple2', _0: v0, _1: v1};
						}),
					A2(_elm_lang$core$Json_Decode$index, 0, _elm_lang$core$Json_Decode$string),
					A2(_elm_lang$core$Json_Decode$index, 1, _elm_lang$core$Json_Decode$string))),
			A3(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
				'articleTags',
				_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
				A3(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
					'articleAuthor',
					_elm_lang$core$Json_Decode$string,
					A3(
						_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
						'articleBody',
						_elm_lang$core$Json_Decode$string,
						A3(
							_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
							'articleTitle',
							_elm_lang$core$Json_Decode$string,
							A3(
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
								'articleSlug',
								_elm_lang$core$Json_Decode$string,
								_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$Article)))))))));
var _user$project$Types$postApiArticlesByUserid = F2(
	function (capture_userid, body) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {ctor: '[]'},
				url: A2(
					_elm_lang$core$String$join,
					'/',
					{
						ctor: '::',
						_0: 'http://localhost:8001',
						_1: {
							ctor: '::',
							_0: 'api',
							_1: {
								ctor: '::',
								_0: 'articles',
								_1: {
									ctor: '::',
									_0: _elm_lang$http$Http$encodeUri(
										_elm_lang$core$Basics$toString(capture_userid)),
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				body: _elm_lang$http$Http$jsonBody(
					_user$project$Types$encodeCreateArticle(body)),
				expect: _elm_lang$http$Http$expectJson(_user$project$Types$decodeArticle),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Types$getApiArticlesBySlug = function (capture_slug) {
	return _elm_lang$http$Http$request(
		{
			method: 'GET',
			headers: {ctor: '[]'},
			url: A2(
				_elm_lang$core$String$join,
				'/',
				{
					ctor: '::',
					_0: 'http://localhost:8001',
					_1: {
						ctor: '::',
						_0: 'api',
						_1: {
							ctor: '::',
							_0: 'articles',
							_1: {
								ctor: '::',
								_0: _elm_lang$http$Http$encodeUri(capture_slug),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			body: _elm_lang$http$Http$emptyBody,
			expect: _elm_lang$http$Http$expectJson(_user$project$Types$decodeArticle),
			timeout: _elm_lang$core$Maybe$Nothing,
			withCredentials: false
		});
};
var _user$project$Types$getApiArticles = _elm_lang$http$Http$request(
	{
		method: 'GET',
		headers: {ctor: '[]'},
		url: A2(
			_elm_lang$core$String$join,
			'/',
			{
				ctor: '::',
				_0: 'http://localhost:8001',
				_1: {
					ctor: '::',
					_0: 'api',
					_1: {
						ctor: '::',
						_0: 'articles',
						_1: {ctor: '[]'}
					}
				}
			}),
		body: _elm_lang$http$Http$emptyBody,
		expect: _elm_lang$http$Http$expectJson(
			_elm_lang$core$Json_Decode$list(_user$project$Types$decodeArticle)),
		timeout: _elm_lang$core$Maybe$Nothing,
		withCredentials: false
	});
var _user$project$Types$CreateArticle = F3(
	function (a, b, c) {
		return {createArticleTitle: a, createArticleBody: b, createArticleTags: c};
	});
var _user$project$Types$decodeCreateArticle = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'createArticleTags',
	_elm_lang$core$Json_Decode$list(_elm_lang$core$Json_Decode$string),
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'createArticleBody',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'createArticleTitle',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$CreateArticle))));
var _user$project$Types$Auth = F2(
	function (a, b) {
		return {authEmail: a, authPassword: b};
	});
var _user$project$Types$decodeAuth = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'authPassword',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'authEmail',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Types$Auth)));
